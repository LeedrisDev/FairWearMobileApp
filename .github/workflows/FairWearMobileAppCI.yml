name: FairWearMobileApp CI

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x

    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run build

  UnitTesting:
    name: Unit Testing
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  linter:
    name: Linter
    runs-on: ubuntu-latest
    needs: UnitTesting
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
    - name: Install dependencies
      run: npm install

    - name: Lint
      run: npm run lint

  Coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    needs: UnitTesting
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Save coverage report as artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage/lcov-report/

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: contains(github.ref, 'release') || contains(github.ref, 'develop') || contains(github.ref, 'master')
    needs: [ build, UnitTesting ]
    steps:
      - uses: actions/checkout@v4

      - name: Retrieve GITHUB_REF
        id: get_branch
        env:
          BRANCH: ${{ github.ref_name }}
        run: echo "tag=${BRANCH//\//_}" >> $GITHUB_OUTPUT

      - name: Create .env file
        run: |
          echo "VITE_API_HOST=${{ secrets.API_HOST }}" > .env
          echo "VITE_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
          echo "VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}" >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ secrets.REGISTRY_URL }}/fairwear/frontend:${{ steps.get_branch.outputs.tag }}-${{ github.run_number }}
            ${{ secrets.REGISTRY_URL }}/fairwear/frontend:latest


